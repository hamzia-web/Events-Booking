Authentication and Authorization
--------------------------------
Authentication: Login-> Can access some part of application like links
Authorization: Login + Admin privilege to access admin part of application

Company HCL:
------------
- Public access:
- Employee access:
- Admin access: server rooms can't be access by HCL employees as well. Should be HCL employee + Server Admin (Authorization)

Event Booking App(MEAN Stack Application)
----------------------------------------
- Free Events: Access to all. No need to login
- Pro Events: Private access(Login required)
- Upload events: private access + Authorization(Login + Admin)

Login
Registration

Client Side Configuration:
-------------------------
Folder structure:
app
   root
	 -> components
         -> home
         -> navbar
     -> services
     -> models
	 -> Guards
	 -> Interceptors

   users (ng g module users --route users --module app.module)
      components
         -> login
         -> register
     -> services -> user.service
     -> models  -> IUser

   events
     components
         -> free-events
         -> pro-events
     -> services -> event.service
     -> models  -> IEvent

Server side configuration:
-------------------------
Npm Modules(Third-party modules): express, cors, dotenv, gravatar, bcryptjs, mongoose, jsonwebtoken
npm install express cors dotenv gravatar bcryptjs mongoose jsonwebtoken

REST API:
---------
router: userRouter-> /users
        eventRouter-> /events

userRouter:
----------
1. Registration: url: http://localhost:5000/users/register
                 method: POST
                 fields: name, email, password

2. Login: url: http://localhost:5000/users/login
                 method: POST
                 fields: email, password

eventRouter:
-----------
1. Get free events:
                 url: http://localhost:5000/events/free
                 method: GET
                 fields: no fields

2. Get Pro events:
                 url: http://localhost:5000/events/pro
                 method: GET
                 fields: no fields

3. Upload events:
                 url: http://localhost:5000/events/upload
                 method: GET
                 fields: name, image, date, price, type, info

Database configuration:
-----------------------
Database Name: events-booking-angular
Tables: users, events
Fields Type
Users table:
name: string
email: string
password:string
avatar: string
isAdmin: boolean
created: date

Events table:
Fields Type
name: string
image: string
date: string
price: number
type: string
info: string
created: date


Server-Side validation: (Form validation at server)
----------------------
Third-party module: express-validator

Interceptor:
------------
will intercept our regular request. we can send token along with request
request + token
command: ng g interceptor auth
Bearer<token>: Request Header

Verify token at server side(express):
------------------------------------
middleware: a function, will take care of verification of every request

Guards:
------
If login, allow them to see Pro events, otherwise redirect to login
command: ng g guard auth


Angular Form Bindings:
----------------------
(i) touched and untouched: fields touched and not touched
(ii) dirty and pristine: changed and not changed
(iii) valid and invalid: valid and invalid
